"use strict";
const electron = require("electron");
electron.contextBridge.exposeInMainWorld("api", {
  // Song management
  getSongList: () => electron.ipcRenderer.invoke("get-song-list"),
  getCurrentSong: () => electron.ipcRenderer.invoke("get-current-song"),
  importMidiFile: (filePath) => electron.ipcRenderer.invoke("import-midi-file", filePath),
  exportMidiFile: (noteSequence, filePath) => electron.ipcRenderer.invoke("export-midi-file", noteSequence, filePath),
  // MIDI functionality
  playMidi: (noteSequence) => electron.ipcRenderer.invoke("play-midi", noteSequence),
  getMidiOutputs: () => electron.ipcRenderer.invoke("get-midi-outputs"),
  getMidiInstruments: () => electron.ipcRenderer.invoke("get-midi-instruments"),
  getMidiDrums: () => electron.ipcRenderer.invoke("get-midi-drums"),
  // Configuration
  getConfig: () => electron.ipcRenderer.invoke("get-config"),
  updateConfig: (newConfig) => electron.ipcRenderer.invoke("update-config", newConfig),
  // Event listeners
  onSongUpdated: (callback) => {
    electron.ipcRenderer.on("song-updated", (_, data) => callback(data));
  },
  onPlaybackProgress: (callback) => {
    electron.ipcRenderer.on("playback-progress", (_, data) => callback(data));
  },
  onMcpServerStatus: (callback) => {
    electron.ipcRenderer.on("mcp-server-status", (_, data) => callback(data));
  },
  onOpenSettings: (callback) => {
    electron.ipcRenderer.on("open-settings", () => callback());
  },
  onShowAbout: (callback) => {
    electron.ipcRenderer.on("show-about", () => callback());
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlbG9hZC5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL21haW4vcHJlbG9hZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb250ZXh0QnJpZGdlLCBpcGNSZW5kZXJlciB9IGZyb20gJ2VsZWN0cm9uJztcbmltcG9ydCB7IEFwcENvbmZpZywgQ29uZmlnVXBkYXRlUmVzdWx0LCBNY3BTZXJ2ZXJTdGF0dXMsIE1pZGlGaWxlUmVzdWx0LCBOb3RlU2VxdWVuY2UsIFBsYXlNaWRpUmVzdWx0LCBQbGF5YmFja1Byb2dyZXNzLCBTYXZlU29uZ1Jlc3VsdCwgU29uZ0luZm8gfSBmcm9tICcuLi90eXBlcyc7XG5cbi8vIEV4cG9zZSBwcm90ZWN0ZWQgbWV0aG9kcyB0aGF0IGFsbG93IHRoZSByZW5kZXJlciBwcm9jZXNzIHRvIHVzZVxuLy8gdGhlIGlwY1JlbmRlcmVyIHdpdGhvdXQgZXhwb3NpbmcgdGhlIGVudGlyZSBvYmplY3RcbmNvbnRleHRCcmlkZ2UuZXhwb3NlSW5NYWluV29ybGQoJ2FwaScsIHtcbiAgLy8gU29uZyBtYW5hZ2VtZW50XG4gIGdldFNvbmdMaXN0OiAoKTogUHJvbWlzZTxTb25nSW5mb1tdPiA9PiBpcGNSZW5kZXJlci5pbnZva2UoJ2dldC1zb25nLWxpc3QnKSxcbiAgZ2V0Q3VycmVudFNvbmc6ICgpOiBQcm9taXNlPE5vdGVTZXF1ZW5jZSB8IG51bGw+ID0+IGlwY1JlbmRlcmVyLmludm9rZSgnZ2V0LWN1cnJlbnQtc29uZycpLFxuICBpbXBvcnRNaWRpRmlsZTogKGZpbGVQYXRoOiBzdHJpbmcpOiBQcm9taXNlPE1pZGlGaWxlUmVzdWx0PiA9PiBpcGNSZW5kZXJlci5pbnZva2UoJ2ltcG9ydC1taWRpLWZpbGUnLCBmaWxlUGF0aCksXG4gIGV4cG9ydE1pZGlGaWxlOiAobm90ZVNlcXVlbmNlOiBOb3RlU2VxdWVuY2UsIGZpbGVQYXRoOiBzdHJpbmcpOiBQcm9taXNlPE1pZGlGaWxlUmVzdWx0PiA9PiBcbiAgICBpcGNSZW5kZXJlci5pbnZva2UoJ2V4cG9ydC1taWRpLWZpbGUnLCBub3RlU2VxdWVuY2UsIGZpbGVQYXRoKSxcbiAgXG4gIC8vIE1JREkgZnVuY3Rpb25hbGl0eVxuICBwbGF5TWlkaTogKG5vdGVTZXF1ZW5jZTogTm90ZVNlcXVlbmNlKTogUHJvbWlzZTxQbGF5TWlkaVJlc3VsdD4gPT4gaXBjUmVuZGVyZXIuaW52b2tlKCdwbGF5LW1pZGknLCBub3RlU2VxdWVuY2UpLFxuICBnZXRNaWRpT3V0cHV0czogKCk6IFByb21pc2U8c3RyaW5nW10+ID0+IGlwY1JlbmRlcmVyLmludm9rZSgnZ2V0LW1pZGktb3V0cHV0cycpLFxuICBnZXRNaWRpSW5zdHJ1bWVudHM6ICgpOiBQcm9taXNlPFJlY29yZDxudW1iZXIsIHsgbmFtZTogc3RyaW5nLCBmYW1pbHk6IHN0cmluZyB9Pj4gPT4gXG4gICAgaXBjUmVuZGVyZXIuaW52b2tlKCdnZXQtbWlkaS1pbnN0cnVtZW50cycpLFxuICBnZXRNaWRpRHJ1bXM6ICgpOiBQcm9taXNlPFJlY29yZDxudW1iZXIsIHsgbmFtZTogc3RyaW5nIH0+PiA9PiBpcGNSZW5kZXJlci5pbnZva2UoJ2dldC1taWRpLWRydW1zJyksXG4gIFxuICAvLyBDb25maWd1cmF0aW9uXG4gIGdldENvbmZpZzogKCk6IFByb21pc2U8QXBwQ29uZmlnPiA9PiBpcGNSZW5kZXJlci5pbnZva2UoJ2dldC1jb25maWcnKSxcbiAgdXBkYXRlQ29uZmlnOiAobmV3Q29uZmlnOiBQYXJ0aWFsPEFwcENvbmZpZz4pOiBQcm9taXNlPENvbmZpZ1VwZGF0ZVJlc3VsdD4gPT4gXG4gICAgaXBjUmVuZGVyZXIuaW52b2tlKCd1cGRhdGUtY29uZmlnJywgbmV3Q29uZmlnKSxcbiAgXG4gIC8vIEV2ZW50IGxpc3RlbmVyc1xuICBvblNvbmdVcGRhdGVkOiAoY2FsbGJhY2s6IChkYXRhOiBTYXZlU29uZ1Jlc3VsdCkgPT4gdm9pZCkgPT4ge1xuICAgIGlwY1JlbmRlcmVyLm9uKCdzb25nLXVwZGF0ZWQnLCAoXywgZGF0YTogU2F2ZVNvbmdSZXN1bHQpID0+IGNhbGxiYWNrKGRhdGEpKTtcbiAgfSxcbiAgb25QbGF5YmFja1Byb2dyZXNzOiAoY2FsbGJhY2s6IChkYXRhOiBQbGF5YmFja1Byb2dyZXNzKSA9PiB2b2lkKSA9PiB7XG4gICAgaXBjUmVuZGVyZXIub24oJ3BsYXliYWNrLXByb2dyZXNzJywgKF8sIGRhdGE6IFBsYXliYWNrUHJvZ3Jlc3MpID0+IGNhbGxiYWNrKGRhdGEpKTtcbiAgfSxcbiAgb25NY3BTZXJ2ZXJTdGF0dXM6IChjYWxsYmFjazogKGRhdGE6IE1jcFNlcnZlclN0YXR1cykgPT4gdm9pZCkgPT4ge1xuICAgIGlwY1JlbmRlcmVyLm9uKCdtY3Atc2VydmVyLXN0YXR1cycsIChfLCBkYXRhOiBNY3BTZXJ2ZXJTdGF0dXMpID0+IGNhbGxiYWNrKGRhdGEpKTtcbiAgfSxcbiAgb25PcGVuU2V0dGluZ3M6IChjYWxsYmFjazogKCkgPT4gdm9pZCkgPT4ge1xuICAgIGlwY1JlbmRlcmVyLm9uKCdvcGVuLXNldHRpbmdzJywgKCkgPT4gY2FsbGJhY2soKSk7XG4gIH0sXG4gIG9uU2hvd0Fib3V0OiAoY2FsbGJhY2s6ICgpID0+IHZvaWQpID0+IHtcbiAgICBpcGNSZW5kZXJlci5vbignc2hvdy1hYm91dCcsICgpID0+IGNhbGxiYWNrKCkpO1xuICB9XG59KTsiXSwibmFtZXMiOlsiY29udGV4dEJyaWRnZSIsImlwY1JlbmRlcmVyIl0sIm1hcHBpbmdzIjoiOztBQUtBQSxTQUFBQSxjQUFjLGtCQUFrQixPQUFPO0FBQUE7QUFBQSxFQUVyQyxhQUFhLE1BQTJCQyxTQUFBQSxZQUFZLE9BQU8sZUFBZTtBQUFBLEVBQzFFLGdCQUFnQixNQUFvQ0EsU0FBQUEsWUFBWSxPQUFPLGtCQUFrQjtBQUFBLEVBQ3pGLGdCQUFnQixDQUFDLGFBQThDQSxTQUFBQSxZQUFZLE9BQU8sb0JBQW9CLFFBQVE7QUFBQSxFQUM5RyxnQkFBZ0IsQ0FBQyxjQUE0QixhQUMzQ0EsU0FBQUEsWUFBWSxPQUFPLG9CQUFvQixjQUFjLFFBQVE7QUFBQTtBQUFBLEVBRy9ELFVBQVUsQ0FBQyxpQkFBd0RBLFNBQUFBLFlBQVksT0FBTyxhQUFhLFlBQVk7QUFBQSxFQUMvRyxnQkFBZ0IsTUFBeUJBLFNBQUFBLFlBQVksT0FBTyxrQkFBa0I7QUFBQSxFQUM5RSxvQkFBb0IsTUFDbEJBLFNBQUFBLFlBQVksT0FBTyxzQkFBc0I7QUFBQSxFQUMzQyxjQUFjLE1BQWlEQSxTQUFBQSxZQUFZLE9BQU8sZ0JBQWdCO0FBQUE7QUFBQSxFQUdsRyxXQUFXLE1BQTBCQSxTQUFBQSxZQUFZLE9BQU8sWUFBWTtBQUFBLEVBQ3BFLGNBQWMsQ0FBQyxjQUNiQSxTQUFBQSxZQUFZLE9BQU8saUJBQWlCLFNBQVM7QUFBQTtBQUFBLEVBRy9DLGVBQWUsQ0FBQyxhQUE2QztBQUMzREEsYUFBQUEsWUFBWSxHQUFHLGdCQUFnQixDQUFDLEdBQUcsU0FBeUIsU0FBUyxJQUFJLENBQUM7QUFBQSxFQUM1RTtBQUFBLEVBQ0Esb0JBQW9CLENBQUMsYUFBK0M7QUFDbEVBLGFBQUFBLFlBQVksR0FBRyxxQkFBcUIsQ0FBQyxHQUFHLFNBQTJCLFNBQVMsSUFBSSxDQUFDO0FBQUEsRUFDbkY7QUFBQSxFQUNBLG1CQUFtQixDQUFDLGFBQThDO0FBQ2hFQSxhQUFBQSxZQUFZLEdBQUcscUJBQXFCLENBQUMsR0FBRyxTQUEwQixTQUFTLElBQUksQ0FBQztBQUFBLEVBQ2xGO0FBQUEsRUFDQSxnQkFBZ0IsQ0FBQyxhQUF5QjtBQUN4Q0EsYUFBQUEsWUFBWSxHQUFHLGlCQUFpQixNQUFNLFNBQUEsQ0FBVTtBQUFBLEVBQ2xEO0FBQUEsRUFDQSxhQUFhLENBQUMsYUFBeUI7QUFDckNBLGFBQUFBLFlBQVksR0FBRyxjQUFjLE1BQU0sU0FBQSxDQUFVO0FBQUEsRUFDL0M7QUFDRixDQUFDOyJ9
